{
  "{\"sourceRoot\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"filename\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\test\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"plugins\":[],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\Study\\Web\\sem2\\lab1",
      "filename": "D:\\Study\\Web\\sem2\\lab1\\test\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Study\\Web\\sem2\\lab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Study\\Web\\sem2\\lab1\\test\\test.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Study\\Web\\sem2\\lab1\\test\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\test",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "const {\n  assert\n} = require('chai');\n\nconst {\n  fetchWeather\n} = require('../script');\n\ndesсribe(\"fetch\", function () {\n  it(\"correct city\", function () {\n    const city = 'London';\n    fetchWeather(city).then(json => {\n      console.log(json.cod);\n      assert.equal(json.cod, 200);\n    });\n  });\n  it(\"incorrect city\", function () {\n    const city = 'Londo';\n    fetchWeather(city).then(json => {\n      console.log(json.cod);\n      assert.equal(json.cod, 200);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsImZldGNoV2VhdGhlciIsImRlc9GBcmliZSIsIml0IiwiY2l0eSIsInRoZW4iLCJqc29uIiwiY29uc29sZSIsImxvZyIsImNvZCIsImVxdWFsIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBYUMsT0FBTyxDQUFDLE1BQUQsQ0FBMUI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQW1CRCxPQUFPLENBQUMsV0FBRCxDQUFoQzs7QUFFQUUsUUFBUSxDQUFDLE9BQUQsRUFBVSxZQUFXO0FBQzNCQyxFQUFBQSxFQUFFLENBQUMsY0FBRCxFQUFpQixZQUFXO0FBQzVCLFVBQU1DLElBQUksR0FBRyxRQUFiO0FBQ0FILElBQUFBLFlBQVksQ0FBQ0csSUFBRCxDQUFaLENBQW1CQyxJQUFuQixDQUF3QkMsSUFBSSxJQUFJO0FBQzlCQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBSSxDQUFDRyxHQUFqQjtBQUNBVixNQUFBQSxNQUFNLENBQUNXLEtBQVAsQ0FBYUosSUFBSSxDQUFDRyxHQUFsQixFQUF1QixHQUF2QjtBQUNELEtBSEQ7QUFJRCxHQU5DLENBQUY7QUFPQU4sRUFBQUEsRUFBRSxDQUFDLGdCQUFELEVBQW1CLFlBQVc7QUFDOUIsVUFBTUMsSUFBSSxHQUFHLE9BQWI7QUFDQUgsSUFBQUEsWUFBWSxDQUFDRyxJQUFELENBQVosQ0FBbUJDLElBQW5CLENBQXdCQyxJQUFJLElBQUk7QUFDOUJDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFJLENBQUNHLEdBQWpCO0FBQ0FWLE1BQUFBLE1BQU0sQ0FBQ1csS0FBUCxDQUFhSixJQUFJLENBQUNHLEdBQWxCLEVBQXVCLEdBQXZCO0FBQ0QsS0FIRDtBQUlELEdBTkMsQ0FBRjtBQU9ELENBZk8sQ0FBUiIsInNvdXJjZVJvb3QiOiJEOlxcU3R1ZHlcXFdlYlxcc2VtMlxcbGFiMVxcdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgYXNzZXJ0IH0gPSByZXF1aXJlKCdjaGFpJyk7XHJcbmNvbnN0IHsgZmV0Y2hXZWF0aGVyIH0gPSByZXF1aXJlKCcuLi9zY3JpcHQnKTtcclxuXHJcbmRlc9GBcmliZShcImZldGNoXCIsIGZ1bmN0aW9uKCkge1xyXG4gIGl0KFwiY29ycmVjdCBjaXR5XCIsIGZ1bmN0aW9uKCkge1xyXG4gICAgY29uc3QgY2l0eSA9ICdMb25kb24nO1xyXG4gICAgZmV0Y2hXZWF0aGVyKGNpdHkpLnRoZW4oanNvbiA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGpzb24uY29kKTtcclxuICAgICAgYXNzZXJ0LmVxdWFsKGpzb24uY29kLCAyMDApXHJcbiAgICB9KTtcclxuICB9KTtcclxuICBpdChcImluY29ycmVjdCBjaXR5XCIsIGZ1bmN0aW9uKCkge1xyXG4gICAgY29uc3QgY2l0eSA9ICdMb25kbyc7XHJcbiAgICBmZXRjaFdlYXRoZXIoY2l0eSkudGhlbihqc29uID0+IHtcclxuICAgICAgY29uc29sZS5sb2coanNvbi5jb2QpO1xyXG4gICAgICBhc3NlcnQuZXF1YWwoanNvbi5jb2QsIDIwMClcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "assert",
        "require",
        "fetchWeather",
        "desсribe",
        "it",
        "city",
        "then",
        "json",
        "console",
        "log",
        "cod",
        "equal"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,MAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAmBD,OAAO,CAAC,WAAD,CAAhC;;AAEAE,QAAQ,CAAC,OAAD,EAAU,YAAW;AAC3BC,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC5B,UAAMC,IAAI,GAAG,QAAb;AACAH,IAAAA,YAAY,CAACG,IAAD,CAAZ,CAAmBC,IAAnB,CAAwBC,IAAI,IAAI;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAV,MAAAA,MAAM,CAACW,KAAP,CAAaJ,IAAI,CAACG,GAAlB,EAAuB,GAAvB;AACD,KAHD;AAID,GANC,CAAF;AAOAN,EAAAA,EAAE,CAAC,gBAAD,EAAmB,YAAW;AAC9B,UAAMC,IAAI,GAAG,OAAb;AACAH,IAAAA,YAAY,CAACG,IAAD,CAAZ,CAAmBC,IAAnB,CAAwBC,IAAI,IAAI;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAV,MAAAA,MAAM,CAACW,KAAP,CAAaJ,IAAI,CAACG,GAAlB,EAAuB,GAAvB;AACD,KAHD;AAID,GANC,CAAF;AAOD,CAfO,CAAR",
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\test",
      "sourcesContent": [
        "const { assert } = require('chai');\r\nconst { fetchWeather } = require('../script');\r\n\r\ndesсribe(\"fetch\", function() {\r\n  it(\"correct city\", function() {\r\n    const city = 'London';\r\n    fetchWeather(city).then(json => {\r\n      console.log(json.cod);\r\n      assert.equal(json.cod, 200)\r\n    });\r\n  });\r\n  it(\"incorrect city\", function() {\r\n    const city = 'Londo';\r\n    fetchWeather(city).then(json => {\r\n      console.log(json.cod);\r\n      assert.equal(json.cod, 200)\r\n    });\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574112563266
  },
  "{\"sourceRoot\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"filename\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\script.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"plugins\":[],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\Study\\Web\\sem2\\lab1",
      "filename": "D:\\Study\\Web\\sem2\\lab1\\script.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Study\\Web\\sem2\\lab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Study\\Web\\sem2\\lab1\\script.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Study\\Web\\sem2\\lab1\\script.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Study\\Web\\sem2\\lab1",
        "sourceFileName": "script.js"
      }
    },
    "ast": null,
    "code": "function onSubmit(e) {\n  e.preventDefault();\n  fetchWeather(e.currentTarget.elements.city_input.value).then(json => {\n    console.log(json);\n\n    if (json.cod == 200) {\n      displayWeather(getWeather(json));\n      displayError(null);\n    } else {\n      displayWeather(null);\n      displayError({\n        message: json.message\n      });\n    }\n  });\n}\n\nexport function fetchWeather(city) {\n  return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=665c8e98e586f364800fd238b845d042&units=metric&lang=en`).then(response => response.json());\n}\n\nfunction getWeather(resp) {\n  let weather = {\n    city: resp.name,\n    param: [{\n      type: 'Weather',\n      value: resp.weather[0].description\n    }, {\n      type: 'Temperature, °C',\n      value: resp.main.temp\n    }, {\n      type: 'Pressure, hPA',\n      value: resp.main.pressure\n    }, {\n      type: 'Humidity, %',\n      value: resp.main.humidity\n    }, {\n      type: 'Wind speed, m/s',\n      value: resp.wind.speed\n    }, {\n      type: 'Clouds, %',\n      value: resp.clouds.all\n    }]\n  };\n  return weather;\n}\n\nfunction displayWeather(weather) {\n  var source = document.getElementById(\"weather-entry-template\").innerHTML;\n  let template = Handlebars.compile(source);\n  document.getElementById(\"weather-block\").innerHTML = template(weather);\n}\n\nfunction displayError(message) {\n  var error_source = document.getElementById(\"error-entry-template\").innerHTML;\n  let template = Handlebars.compile(error_source);\n  document.getElementById(\"error-block\").innerHTML = template(message);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJvblN1Ym1pdCIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImZldGNoV2VhdGhlciIsImN1cnJlbnRUYXJnZXQiLCJlbGVtZW50cyIsImNpdHlfaW5wdXQiLCJ2YWx1ZSIsInRoZW4iLCJqc29uIiwiY29uc29sZSIsImxvZyIsImNvZCIsImRpc3BsYXlXZWF0aGVyIiwiZ2V0V2VhdGhlciIsImRpc3BsYXlFcnJvciIsIm1lc3NhZ2UiLCJjaXR5IiwiZmV0Y2giLCJyZXNwb25zZSIsInJlc3AiLCJ3ZWF0aGVyIiwibmFtZSIsInBhcmFtIiwidHlwZSIsImRlc2NyaXB0aW9uIiwibWFpbiIsInRlbXAiLCJwcmVzc3VyZSIsImh1bWlkaXR5Iiwid2luZCIsInNwZWVkIiwiY2xvdWRzIiwiYWxsIiwic291cmNlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsInRlbXBsYXRlIiwiSGFuZGxlYmFycyIsImNvbXBpbGUiLCJlcnJvcl9zb3VyY2UiXSwibWFwcGluZ3MiOiJBQUNBLFNBQVNBLFFBQVQsQ0FBa0JDLENBQWxCLEVBQXFCO0FBQ2pCQSxFQUFBQSxDQUFDLENBQUNDLGNBQUY7QUFDQUMsRUFBQUEsWUFBWSxDQUFDRixDQUFDLENBQUNHLGFBQUYsQ0FBZ0JDLFFBQWhCLENBQXlCQyxVQUF6QixDQUFvQ0MsS0FBckMsQ0FBWixDQUNHQyxJQURILENBQ1FDLElBQUksSUFBSTtBQUNaQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWjs7QUFDQSxRQUFJQSxJQUFJLENBQUNHLEdBQUwsSUFBWSxHQUFoQixFQUFxQjtBQUNuQkMsTUFBQUEsY0FBYyxDQUFDQyxVQUFVLENBQUNMLElBQUQsQ0FBWCxDQUFkO0FBQ0FNLE1BQUFBLFlBQVksQ0FBQyxJQUFELENBQVo7QUFDRCxLQUhELE1BR087QUFDTEYsTUFBQUEsY0FBYyxDQUFDLElBQUQsQ0FBZDtBQUNBRSxNQUFBQSxZQUFZLENBQUM7QUFDWEMsUUFBQUEsT0FBTyxFQUFFUCxJQUFJLENBQUNPO0FBREgsT0FBRCxDQUFaO0FBR0Q7QUFDRixHQVpIO0FBYUg7O0FBRUQsT0FBTyxTQUFTYixZQUFULENBQXNCYyxJQUF0QixFQUEyQjtBQUNoQyxTQUFPQyxLQUFLLENBQUUsb0RBQW1ERCxJQUFLLDhEQUExRCxDQUFMLENBQ0pULElBREksQ0FDQ1csUUFBUSxJQUFJQSxRQUFRLENBQUNWLElBQVQsRUFEYixDQUFQO0FBRUQ7O0FBRUQsU0FBU0ssVUFBVCxDQUFvQk0sSUFBcEIsRUFBMEI7QUFDeEIsTUFBSUMsT0FBTyxHQUFHO0FBQ2RKLElBQUFBLElBQUksRUFBRUcsSUFBSSxDQUFDRSxJQURHO0FBRWRDLElBQUFBLEtBQUssRUFBRSxDQUNMO0FBQ0VDLE1BQUFBLElBQUksRUFBRSxTQURSO0FBRUVqQixNQUFBQSxLQUFLLEVBQUVhLElBQUksQ0FBQ0MsT0FBTCxDQUFhLENBQWIsRUFBZ0JJO0FBRnpCLEtBREssRUFLTDtBQUNFRCxNQUFBQSxJQUFJLEVBQUUsaUJBRFI7QUFFRWpCLE1BQUFBLEtBQUssRUFBRWEsSUFBSSxDQUFDTSxJQUFMLENBQVVDO0FBRm5CLEtBTEssRUFTTDtBQUNFSCxNQUFBQSxJQUFJLEVBQUUsZUFEUjtBQUVFakIsTUFBQUEsS0FBSyxFQUFFYSxJQUFJLENBQUNNLElBQUwsQ0FBVUU7QUFGbkIsS0FUSyxFQWFMO0FBQ0VKLE1BQUFBLElBQUksRUFBRSxhQURSO0FBRUVqQixNQUFBQSxLQUFLLEVBQUVhLElBQUksQ0FBQ00sSUFBTCxDQUFVRztBQUZuQixLQWJLLEVBaUJMO0FBQ0VMLE1BQUFBLElBQUksRUFBRSxpQkFEUjtBQUVFakIsTUFBQUEsS0FBSyxFQUFFYSxJQUFJLENBQUNVLElBQUwsQ0FBVUM7QUFGbkIsS0FqQkssRUFxQkw7QUFDRVAsTUFBQUEsSUFBSSxFQUFFLFdBRFI7QUFFRWpCLE1BQUFBLEtBQUssRUFBRWEsSUFBSSxDQUFDWSxNQUFMLENBQVlDO0FBRnJCLEtBckJLO0FBRk8sR0FBZDtBQTZCQSxTQUFPWixPQUFQO0FBQ0Q7O0FBRUQsU0FBU1IsY0FBVCxDQUF3QlEsT0FBeEIsRUFBaUM7QUFDL0IsTUFBSWEsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0Isd0JBQXhCLEVBQWtEQyxTQUEvRDtBQUNFLE1BQUlDLFFBQVEsR0FBR0MsVUFBVSxDQUFDQyxPQUFYLENBQW1CTixNQUFuQixDQUFmO0FBQ0FDLEVBQUFBLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixlQUF4QixFQUF5Q0MsU0FBekMsR0FBcURDLFFBQVEsQ0FBQ2pCLE9BQUQsQ0FBN0Q7QUFDSDs7QUFFRCxTQUFTTixZQUFULENBQXNCQyxPQUF0QixFQUErQjtBQUM3QixNQUFJeUIsWUFBWSxHQUFHTixRQUFRLENBQUNDLGNBQVQsQ0FBd0Isc0JBQXhCLEVBQWdEQyxTQUFuRTtBQUNFLE1BQUlDLFFBQVEsR0FBR0MsVUFBVSxDQUFDQyxPQUFYLENBQW1CQyxZQUFuQixDQUFmO0FBQ0FOLEVBQUFBLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixhQUF4QixFQUF1Q0MsU0FBdkMsR0FBbURDLFFBQVEsQ0FBQ3RCLE9BQUQsQ0FBM0Q7QUFDSCIsInNvdXJjZVJvb3QiOiJEOlxcU3R1ZHlcXFdlYlxcc2VtMlxcbGFiMSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5mdW5jdGlvbiBvblN1Ym1pdChlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBmZXRjaFdlYXRoZXIoZS5jdXJyZW50VGFyZ2V0LmVsZW1lbnRzLmNpdHlfaW5wdXQudmFsdWUpXHJcbiAgICAgIC50aGVuKGpzb24gPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGpzb24pO1xyXG4gICAgICAgIGlmIChqc29uLmNvZCA9PSAyMDApIHtcclxuICAgICAgICAgIGRpc3BsYXlXZWF0aGVyKGdldFdlYXRoZXIoanNvbikpO1xyXG4gICAgICAgICAgZGlzcGxheUVycm9yKG51bGwpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBkaXNwbGF5V2VhdGhlcihudWxsKTtcclxuICAgICAgICAgIGRpc3BsYXlFcnJvcih7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6IGpzb24ubWVzc2FnZSxcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoV2VhdGhlcihjaXR5KXtcclxuICByZXR1cm4gZmV0Y2goYGh0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHl9JmFwcGlkPTY2NWM4ZTk4ZTU4NmYzNjQ4MDBmZDIzOGI4NDVkMDQyJnVuaXRzPW1ldHJpYyZsYW5nPWVuYClcclxuICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFdlYXRoZXIocmVzcCkge1xyXG4gIGxldCB3ZWF0aGVyID0ge1xyXG4gIGNpdHk6IHJlc3AubmFtZSxcclxuICBwYXJhbTogW1xyXG4gICAge1xyXG4gICAgICB0eXBlOiAnV2VhdGhlcicsXHJcbiAgICAgIHZhbHVlOiByZXNwLndlYXRoZXJbMF0uZGVzY3JpcHRpb25cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIHR5cGU6ICdUZW1wZXJhdHVyZSwgwrBDJyxcclxuICAgICAgdmFsdWU6IHJlc3AubWFpbi50ZW1wXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0eXBlOiAnUHJlc3N1cmUsIGhQQScsXHJcbiAgICAgIHZhbHVlOiByZXNwLm1haW4ucHJlc3N1cmUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0eXBlOiAnSHVtaWRpdHksICUnLFxyXG4gICAgICB2YWx1ZTogcmVzcC5tYWluLmh1bWlkaXR5XHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0eXBlOiAnV2luZCBzcGVlZCwgbS9zJyxcclxuICAgICAgdmFsdWU6IHJlc3Aud2luZC5zcGVlZFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgdHlwZTogJ0Nsb3VkcywgJScsXHJcbiAgICAgIHZhbHVlOiByZXNwLmNsb3Vkcy5hbGxcclxuICAgIH0sXHJcbiAgXVxyXG4gIH1cclxuICByZXR1cm4gd2VhdGhlcjtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzcGxheVdlYXRoZXIod2VhdGhlcikge1xyXG4gIHZhciBzb3VyY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYXRoZXItZW50cnktdGVtcGxhdGVcIikuaW5uZXJIVE1MO1xyXG4gICAgbGV0IHRlbXBsYXRlID0gSGFuZGxlYmFycy5jb21waWxlKHNvdXJjZSk7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYXRoZXItYmxvY2tcIikuaW5uZXJIVE1MID0gdGVtcGxhdGUod2VhdGhlcik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc3BsYXlFcnJvcihtZXNzYWdlKSB7XHJcbiAgdmFyIGVycm9yX3NvdXJjZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXJyb3ItZW50cnktdGVtcGxhdGVcIikuaW5uZXJIVE1MO1xyXG4gICAgbGV0IHRlbXBsYXRlID0gSGFuZGxlYmFycy5jb21waWxlKGVycm9yX3NvdXJjZSk7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVycm9yLWJsb2NrXCIpLmlubmVySFRNTCA9IHRlbXBsYXRlKG1lc3NhZ2UpO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "script.js"
      ],
      "names": [
        "onSubmit",
        "e",
        "preventDefault",
        "fetchWeather",
        "currentTarget",
        "elements",
        "city_input",
        "value",
        "then",
        "json",
        "console",
        "log",
        "cod",
        "displayWeather",
        "getWeather",
        "displayError",
        "message",
        "city",
        "fetch",
        "response",
        "resp",
        "weather",
        "name",
        "param",
        "type",
        "description",
        "main",
        "temp",
        "pressure",
        "humidity",
        "wind",
        "speed",
        "clouds",
        "all",
        "source",
        "document",
        "getElementById",
        "innerHTML",
        "template",
        "Handlebars",
        "compile",
        "error_source"
      ],
      "mappings": "AACA,SAASA,QAAT,CAAkBC,CAAlB,EAAqB;AACjBA,EAAAA,CAAC,CAACC,cAAF;AACAC,EAAAA,YAAY,CAACF,CAAC,CAACG,aAAF,CAAgBC,QAAhB,CAAyBC,UAAzB,CAAoCC,KAArC,CAAZ,CACGC,IADH,CACQC,IAAI,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAIA,IAAI,CAACG,GAAL,IAAY,GAAhB,EAAqB;AACnBC,MAAAA,cAAc,CAACC,UAAU,CAACL,IAAD,CAAX,CAAd;AACAM,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAHD,MAGO;AACLF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,YAAY,CAAC;AACXC,QAAAA,OAAO,EAAEP,IAAI,CAACO;AADH,OAAD,CAAZ;AAGD;AACF,GAZH;AAaH;;AAED,OAAO,SAASb,YAAT,CAAsBc,IAAtB,EAA2B;AAChC,SAAOC,KAAK,CAAE,oDAAmDD,IAAK,8DAA1D,CAAL,CACJT,IADI,CACCW,QAAQ,IAAIA,QAAQ,CAACV,IAAT,EADb,CAAP;AAED;;AAED,SAASK,UAAT,CAAoBM,IAApB,EAA0B;AACxB,MAAIC,OAAO,GAAG;AACdJ,IAAAA,IAAI,EAAEG,IAAI,CAACE,IADG;AAEdC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEjB,MAAAA,KAAK,EAAEa,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBI;AAFzB,KADK,EAKL;AACED,MAAAA,IAAI,EAAE,iBADR;AAEEjB,MAAAA,KAAK,EAAEa,IAAI,CAACM,IAAL,CAAUC;AAFnB,KALK,EASL;AACEH,MAAAA,IAAI,EAAE,eADR;AAEEjB,MAAAA,KAAK,EAAEa,IAAI,CAACM,IAAL,CAAUE;AAFnB,KATK,EAaL;AACEJ,MAAAA,IAAI,EAAE,aADR;AAEEjB,MAAAA,KAAK,EAAEa,IAAI,CAACM,IAAL,CAAUG;AAFnB,KAbK,EAiBL;AACEL,MAAAA,IAAI,EAAE,iBADR;AAEEjB,MAAAA,KAAK,EAAEa,IAAI,CAACU,IAAL,CAAUC;AAFnB,KAjBK,EAqBL;AACEP,MAAAA,IAAI,EAAE,WADR;AAEEjB,MAAAA,KAAK,EAAEa,IAAI,CAACY,MAAL,CAAYC;AAFrB,KArBK;AAFO,GAAd;AA6BA,SAAOZ,OAAP;AACD;;AAED,SAASR,cAAT,CAAwBQ,OAAxB,EAAiC;AAC/B,MAAIa,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,EAAkDC,SAA/D;AACE,MAAIC,QAAQ,GAAGC,UAAU,CAACC,OAAX,CAAmBN,MAAnB,CAAf;AACAC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,SAAzC,GAAqDC,QAAQ,CAACjB,OAAD,CAA7D;AACH;;AAED,SAASN,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,MAAIyB,YAAY,GAAGN,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAgDC,SAAnE;AACE,MAAIC,QAAQ,GAAGC,UAAU,CAACC,OAAX,CAAmBC,YAAnB,CAAf;AACAN,EAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,GAAmDC,QAAQ,CAACtB,OAAD,CAA3D;AACH",
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1",
      "sourcesContent": [
        "\r\nfunction onSubmit(e) {\r\n    e.preventDefault();\r\n    fetchWeather(e.currentTarget.elements.city_input.value)\r\n      .then(json => {\r\n        console.log(json);\r\n        if (json.cod == 200) {\r\n          displayWeather(getWeather(json));\r\n          displayError(null);\r\n        } else {\r\n          displayWeather(null);\r\n          displayError({\r\n            message: json.message,\r\n          });\r\n        }\r\n      })\r\n}\r\n\r\nexport function fetchWeather(city){\r\n  return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=665c8e98e586f364800fd238b845d042&units=metric&lang=en`)\r\n    .then(response => response.json());\r\n}\r\n\r\nfunction getWeather(resp) {\r\n  let weather = {\r\n  city: resp.name,\r\n  param: [\r\n    {\r\n      type: 'Weather',\r\n      value: resp.weather[0].description\r\n    },\r\n    {\r\n      type: 'Temperature, °C',\r\n      value: resp.main.temp\r\n    },\r\n    {\r\n      type: 'Pressure, hPA',\r\n      value: resp.main.pressure,\r\n    },\r\n    {\r\n      type: 'Humidity, %',\r\n      value: resp.main.humidity\r\n    },\r\n    {\r\n      type: 'Wind speed, m/s',\r\n      value: resp.wind.speed\r\n    },\r\n    {\r\n      type: 'Clouds, %',\r\n      value: resp.clouds.all\r\n    },\r\n  ]\r\n  }\r\n  return weather;\r\n}\r\n\r\nfunction displayWeather(weather) {\r\n  var source = document.getElementById(\"weather-entry-template\").innerHTML;\r\n    let template = Handlebars.compile(source);\r\n    document.getElementById(\"weather-block\").innerHTML = template(weather);\r\n}\r\n\r\nfunction displayError(message) {\r\n  var error_source = document.getElementById(\"error-entry-template\").innerHTML;\r\n    let template = Handlebars.compile(error_source);\r\n    document.getElementById(\"error-block\").innerHTML = template(message);\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574112712481
  },
  "{\"sourceRoot\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"filename\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\test\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\Study\\Web\\sem2\\lab1",
      "filename": "D:\\Study\\Web\\sem2\\lab1\\test\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Study\\Web\\sem2\\lab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Study\\Web\\sem2\\lab1\\test\\test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Study\\Web\\sem2\\lab1\\test\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\test",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('chai'),\n    assert = _require.assert;\n\nvar _require2 = require('../script'),\n    fetchWeather = _require2.fetchWeather;\n\ndesribe(\"fetch\", function () {\n  it(\"correct city\", function () {\n    var city = 'London';\n    fetchWeather(city).then(function (json) {\n      console.log(json.cod);\n      assert.equal(json.cod, 200);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImFzc2VydCIsImZldGNoV2VhdGhlciIsImRlc3JpYmUiLCJpdCIsImNpdHkiLCJ0aGVuIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJjb2QiLCJlcXVhbCJdLCJtYXBwaW5ncyI6Ijs7ZUFBbUJBLE9BQU8sQ0FBQyxNQUFELEM7SUFBbEJDLE0sWUFBQUEsTTs7Z0JBQ2lCRCxPQUFPLENBQUMsV0FBRCxDO0lBQXhCRSxZLGFBQUFBLFk7O0FBRVJDLE9BQU8sQ0FBRSxPQUFGLEVBQVcsWUFBVTtBQUMxQkMsRUFBQUEsRUFBRSxDQUFDLGNBQUQsRUFBaUIsWUFBVztBQUM1QixRQUFNQyxJQUFJLEdBQUcsUUFBYjtBQUNBSCxJQUFBQSxZQUFZLENBQUNHLElBQUQsQ0FBWixDQUFtQkMsSUFBbkIsQ0FBd0IsVUFBQUMsSUFBSSxFQUFJO0FBQzlCQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBSSxDQUFDRyxHQUFqQjtBQUNBVCxNQUFBQSxNQUFNLENBQUNVLEtBQVAsQ0FBYUosSUFBSSxDQUFDRyxHQUFsQixFQUF1QixHQUF2QjtBQUNELEtBSEQ7QUFJRCxHQU5DLENBQUY7QUFPRCxDQVJNLENBQVAiLCJzb3VyY2VSb290IjoiRDpcXFN0dWR5XFxXZWJcXHNlbTJcXGxhYjFcXHRlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGFzc2VydCB9ID0gcmVxdWlyZSgnY2hhaScpO1xyXG5jb25zdCB7IGZldGNoV2VhdGhlciB9ID0gcmVxdWlyZSgnLi4vc2NyaXB0Jyk7XHJcblxyXG5kZXNyaWJlIChcImZldGNoXCIsIGZ1bmN0aW9uKCl7XHJcbiAgaXQoXCJjb3JyZWN0IGNpdHlcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICBjb25zdCBjaXR5ID0gJ0xvbmRvbic7XHJcbiAgICBmZXRjaFdlYXRoZXIoY2l0eSkudGhlbihqc29uID0+IHtcclxuICAgICAgY29uc29sZS5sb2coanNvbi5jb2QpO1xyXG4gICAgICBhc3NlcnQuZXF1YWwoanNvbi5jb2QsIDIwMClcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "require",
        "assert",
        "fetchWeather",
        "desribe",
        "it",
        "city",
        "then",
        "json",
        "console",
        "log",
        "cod",
        "equal"
      ],
      "mappings": ";;eAAmBA,OAAO,CAAC,MAAD,C;IAAlBC,M,YAAAA,M;;gBACiBD,OAAO,CAAC,WAAD,C;IAAxBE,Y,aAAAA,Y;;AAERC,OAAO,CAAE,OAAF,EAAW,YAAU;AAC1BC,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC5B,QAAMC,IAAI,GAAG,QAAb;AACAH,IAAAA,YAAY,CAACG,IAAD,CAAZ,CAAmBC,IAAnB,CAAwB,UAAAC,IAAI,EAAI;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAT,MAAAA,MAAM,CAACU,KAAP,CAAaJ,IAAI,CAACG,GAAlB,EAAuB,GAAvB;AACD,KAHD;AAID,GANC,CAAF;AAOD,CARM,CAAP",
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\test",
      "sourcesContent": [
        "const { assert } = require('chai');\r\nconst { fetchWeather } = require('../script');\r\n\r\ndesribe (\"fetch\", function(){\r\n  it(\"correct city\", function() {\r\n    const city = 'London';\r\n    fetchWeather(city).then(json => {\r\n      console.log(json.cod);\r\n      assert.equal(json.cod, 200)\r\n    });\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574094713891
  },
  "{\"sourceRoot\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"filename\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\script.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\Study\\Web\\sem2\\lab1",
      "filename": "D:\\Study\\Web\\sem2\\lab1\\script.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Study\\Web\\sem2\\lab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Study\\Web\\sem2\\lab1\\script.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Study\\Web\\sem2\\lab1\\script.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Study\\Web\\sem2\\lab1",
        "sourceFileName": "script.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchWeather = fetchWeather;\nexports.getWeather = getWeather;\nexports.displayWeather = displayWeather;\nexports.displayError = displayError;\n\nvar fetch = require('node-fetch');\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  fetchWeather(e.currentTarget.elements.city_input.value).then(function (json) {\n    console.log(json);\n\n    if (json.cod == 200) {\n      console.log(\"god\");\n      displayWeather(getWeather(json));\n      displayError(null);\n      console.log(\"jhgfd\");\n    } else {\n      console.log(\"bad\");\n      displayWeather(null);\n      displayError({\n        message: json.message\n      });\n    }\n  });\n}\n\nfunction fetchWeather(city) {\n  return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=665c8e98e586f364800fd238b845d042&units=metric&lang=en\")).then(function (response) {\n    return response.json();\n  });\n}\n\nfunction getWeather(resp) {\n  var weather = {\n    city: resp.name,\n    param: [{\n      type: 'Weather',\n      value: resp.weather[0].description\n    }, {\n      type: 'Temperature, °C',\n      value: resp.main.temp\n    }, {\n      type: 'Pressure, hPA',\n      value: resp.main.pressure\n    }, {\n      type: 'Humidity, %',\n      value: resp.main.humidity\n    }, {\n      type: 'Wind speed, m/s',\n      value: resp.wind.speed\n    }, {\n      type: 'Clouds, %',\n      value: resp.clouds.all\n    }]\n  };\n  return weather;\n}\n\nfunction displayWeather(weather) {\n  var source = document.getElementById(\"weather-entry-template\").innerHTML;\n  var template = Handlebars.compile(source);\n  document.getElementById(\"weather-block\").innerHTML = template(weather);\n}\n\nfunction displayError(message) {\n  var error_source = document.getElementById(\"error-entry-template\").innerHTML;\n  var template = Handlebars.compile(error_source);\n  document.getElementById(\"error-block\").innerHTML = template(message);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJmZXRjaCIsInJlcXVpcmUiLCJvblN1Ym1pdCIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImZldGNoV2VhdGhlciIsImN1cnJlbnRUYXJnZXQiLCJlbGVtZW50cyIsImNpdHlfaW5wdXQiLCJ2YWx1ZSIsInRoZW4iLCJqc29uIiwiY29uc29sZSIsImxvZyIsImNvZCIsImRpc3BsYXlXZWF0aGVyIiwiZ2V0V2VhdGhlciIsImRpc3BsYXlFcnJvciIsIm1lc3NhZ2UiLCJjaXR5IiwicmVzcG9uc2UiLCJyZXNwIiwid2VhdGhlciIsIm5hbWUiLCJwYXJhbSIsInR5cGUiLCJkZXNjcmlwdGlvbiIsIm1haW4iLCJ0ZW1wIiwicHJlc3N1cmUiLCJodW1pZGl0eSIsIndpbmQiLCJzcGVlZCIsImNsb3VkcyIsImFsbCIsInNvdXJjZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJ0ZW1wbGF0ZSIsIkhhbmRsZWJhcnMiLCJjb21waWxlIiwiZXJyb3Jfc291cmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUFyQjs7QUFFQSxTQUFTQyxRQUFULENBQWtCQyxDQUFsQixFQUFxQjtBQUNqQkEsRUFBQUEsQ0FBQyxDQUFDQyxjQUFGO0FBQ0FDLEVBQUFBLFlBQVksQ0FBQ0YsQ0FBQyxDQUFDRyxhQUFGLENBQWdCQyxRQUFoQixDQUF5QkMsVUFBekIsQ0FBb0NDLEtBQXJDLENBQVosQ0FDR0MsSUFESCxDQUNRLFVBQUFDLElBQUksRUFBSTtBQUNaQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWjs7QUFDQSxRQUFJQSxJQUFJLENBQUNHLEdBQUwsSUFBWSxHQUFoQixFQUFxQjtBQUNuQkYsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksS0FBWjtBQUNBRSxNQUFBQSxjQUFjLENBQUNDLFVBQVUsQ0FBQ0wsSUFBRCxDQUFYLENBQWQ7QUFDQU0sTUFBQUEsWUFBWSxDQUFDLElBQUQsQ0FBWjtBQUNBTCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaO0FBQ0QsS0FMRCxNQUtPO0FBQ0xELE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEtBQVo7QUFDQUUsTUFBQUEsY0FBYyxDQUFDLElBQUQsQ0FBZDtBQUNBRSxNQUFBQSxZQUFZLENBQUM7QUFDWEMsUUFBQUEsT0FBTyxFQUFFUCxJQUFJLENBQUNPO0FBREgsT0FBRCxDQUFaO0FBR0Q7QUFDRixHQWZIO0FBZ0JIOztBQUVNLFNBQVNiLFlBQVQsQ0FBc0JjLElBQXRCLEVBQTJCO0FBQ2hDLFNBQU9uQixLQUFLLDREQUFxRG1CLElBQXJELGtFQUFMLENBQ0pULElBREksQ0FDQyxVQUFBVSxRQUFRO0FBQUEsV0FBSUEsUUFBUSxDQUFDVCxJQUFULEVBQUo7QUFBQSxHQURULENBQVA7QUFFRDs7QUFFTSxTQUFTSyxVQUFULENBQW9CSyxJQUFwQixFQUEwQjtBQUMvQixNQUFJQyxPQUFPLEdBQUc7QUFDZEgsSUFBQUEsSUFBSSxFQUFFRSxJQUFJLENBQUNFLElBREc7QUFFZEMsSUFBQUEsS0FBSyxFQUFFLENBQ0w7QUFDRUMsTUFBQUEsSUFBSSxFQUFFLFNBRFI7QUFFRWhCLE1BQUFBLEtBQUssRUFBRVksSUFBSSxDQUFDQyxPQUFMLENBQWEsQ0FBYixFQUFnQkk7QUFGekIsS0FESyxFQUtMO0FBQ0VELE1BQUFBLElBQUksRUFBRSxpQkFEUjtBQUVFaEIsTUFBQUEsS0FBSyxFQUFFWSxJQUFJLENBQUNNLElBQUwsQ0FBVUM7QUFGbkIsS0FMSyxFQVNMO0FBQ0VILE1BQUFBLElBQUksRUFBRSxlQURSO0FBRUVoQixNQUFBQSxLQUFLLEVBQUVZLElBQUksQ0FBQ00sSUFBTCxDQUFVRTtBQUZuQixLQVRLLEVBYUw7QUFDRUosTUFBQUEsSUFBSSxFQUFFLGFBRFI7QUFFRWhCLE1BQUFBLEtBQUssRUFBRVksSUFBSSxDQUFDTSxJQUFMLENBQVVHO0FBRm5CLEtBYkssRUFpQkw7QUFDRUwsTUFBQUEsSUFBSSxFQUFFLGlCQURSO0FBRUVoQixNQUFBQSxLQUFLLEVBQUVZLElBQUksQ0FBQ1UsSUFBTCxDQUFVQztBQUZuQixLQWpCSyxFQXFCTDtBQUNFUCxNQUFBQSxJQUFJLEVBQUUsV0FEUjtBQUVFaEIsTUFBQUEsS0FBSyxFQUFFWSxJQUFJLENBQUNZLE1BQUwsQ0FBWUM7QUFGckIsS0FyQks7QUFGTyxHQUFkO0FBNkJBLFNBQU9aLE9BQVA7QUFDRDs7QUFFTSxTQUFTUCxjQUFULENBQXdCTyxPQUF4QixFQUFpQztBQUN0QyxNQUFJYSxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3Qix3QkFBeEIsRUFBa0RDLFNBQS9EO0FBQ0UsTUFBSUMsUUFBUSxHQUFHQyxVQUFVLENBQUNDLE9BQVgsQ0FBbUJOLE1BQW5CLENBQWY7QUFDQUMsRUFBQUEsUUFBUSxDQUFDQyxjQUFULENBQXdCLGVBQXhCLEVBQXlDQyxTQUF6QyxHQUFxREMsUUFBUSxDQUFDakIsT0FBRCxDQUE3RDtBQUNIOztBQUVNLFNBQVNMLFlBQVQsQ0FBc0JDLE9BQXRCLEVBQStCO0FBQ3BDLE1BQUl3QixZQUFZLEdBQUdOLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixzQkFBeEIsRUFBZ0RDLFNBQW5FO0FBQ0UsTUFBSUMsUUFBUSxHQUFHQyxVQUFVLENBQUNDLE9BQVgsQ0FBbUJDLFlBQW5CLENBQWY7QUFDQU4sRUFBQUEsUUFBUSxDQUFDQyxjQUFULENBQXdCLGFBQXhCLEVBQXVDQyxTQUF2QyxHQUFtREMsUUFBUSxDQUFDckIsT0FBRCxDQUEzRDtBQUNIIiwic291cmNlUm9vdCI6IkQ6XFxTdHVkeVxcV2ViXFxzZW0yXFxsYWIxIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZmV0Y2ggPSByZXF1aXJlKCdub2RlLWZldGNoJyk7XHJcblxyXG5mdW5jdGlvbiBvblN1Ym1pdChlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBmZXRjaFdlYXRoZXIoZS5jdXJyZW50VGFyZ2V0LmVsZW1lbnRzLmNpdHlfaW5wdXQudmFsdWUpXHJcbiAgICAgIC50aGVuKGpzb24gPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGpzb24pO1xyXG4gICAgICAgIGlmIChqc29uLmNvZCA9PSAyMDApIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKFwiZ29kXCIpO1xyXG4gICAgICAgICAgZGlzcGxheVdlYXRoZXIoZ2V0V2VhdGhlcihqc29uKSk7XHJcbiAgICAgICAgICBkaXNwbGF5RXJyb3IobnVsbCk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImpoZ2ZkXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImJhZFwiKTtcclxuICAgICAgICAgIGRpc3BsYXlXZWF0aGVyKG51bGwpO1xyXG4gICAgICAgICAgZGlzcGxheUVycm9yKHtcclxuICAgICAgICAgICAgbWVzc2FnZToganNvbi5tZXNzYWdlLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZmV0Y2hXZWF0aGVyKGNpdHkpe1xyXG4gIHJldHVybiBmZXRjaChgaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPSR7Y2l0eX0mYXBwaWQ9NjY1YzhlOThlNTg2ZjM2NDgwMGZkMjM4Yjg0NWQwNDImdW5pdHM9bWV0cmljJmxhbmc9ZW5gKVxyXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFdlYXRoZXIocmVzcCkge1xyXG4gIGxldCB3ZWF0aGVyID0ge1xyXG4gIGNpdHk6IHJlc3AubmFtZSxcclxuICBwYXJhbTogW1xyXG4gICAge1xyXG4gICAgICB0eXBlOiAnV2VhdGhlcicsXHJcbiAgICAgIHZhbHVlOiByZXNwLndlYXRoZXJbMF0uZGVzY3JpcHRpb25cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIHR5cGU6ICdUZW1wZXJhdHVyZSwgwrBDJyxcclxuICAgICAgdmFsdWU6IHJlc3AubWFpbi50ZW1wXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0eXBlOiAnUHJlc3N1cmUsIGhQQScsXHJcbiAgICAgIHZhbHVlOiByZXNwLm1haW4ucHJlc3N1cmUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0eXBlOiAnSHVtaWRpdHksICUnLFxyXG4gICAgICB2YWx1ZTogcmVzcC5tYWluLmh1bWlkaXR5XHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0eXBlOiAnV2luZCBzcGVlZCwgbS9zJyxcclxuICAgICAgdmFsdWU6IHJlc3Aud2luZC5zcGVlZFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgdHlwZTogJ0Nsb3VkcywgJScsXHJcbiAgICAgIHZhbHVlOiByZXNwLmNsb3Vkcy5hbGxcclxuICAgIH0sXHJcbiAgXVxyXG4gIH1cclxuICByZXR1cm4gd2VhdGhlcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlXZWF0aGVyKHdlYXRoZXIpIHtcclxuICB2YXIgc291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3ZWF0aGVyLWVudHJ5LXRlbXBsYXRlXCIpLmlubmVySFRNTDtcclxuICAgIGxldCB0ZW1wbGF0ZSA9IEhhbmRsZWJhcnMuY29tcGlsZShzb3VyY2UpO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3ZWF0aGVyLWJsb2NrXCIpLmlubmVySFRNTCA9IHRlbXBsYXRlKHdlYXRoZXIpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGlzcGxheUVycm9yKG1lc3NhZ2UpIHtcclxuICB2YXIgZXJyb3Jfc291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlcnJvci1lbnRyeS10ZW1wbGF0ZVwiKS5pbm5lckhUTUw7XHJcbiAgICBsZXQgdGVtcGxhdGUgPSBIYW5kbGViYXJzLmNvbXBpbGUoZXJyb3Jfc291cmNlKTtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXJyb3ItYmxvY2tcIikuaW5uZXJIVE1MID0gdGVtcGxhdGUobWVzc2FnZSk7XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "script.js"
      ],
      "names": [
        "fetch",
        "require",
        "onSubmit",
        "e",
        "preventDefault",
        "fetchWeather",
        "currentTarget",
        "elements",
        "city_input",
        "value",
        "then",
        "json",
        "console",
        "log",
        "cod",
        "displayWeather",
        "getWeather",
        "displayError",
        "message",
        "city",
        "response",
        "resp",
        "weather",
        "name",
        "param",
        "type",
        "description",
        "main",
        "temp",
        "pressure",
        "humidity",
        "wind",
        "speed",
        "clouds",
        "all",
        "source",
        "document",
        "getElementById",
        "innerHTML",
        "template",
        "Handlebars",
        "compile",
        "error_source"
      ],
      "mappings": ";;;;;;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACjBA,EAAAA,CAAC,CAACC,cAAF;AACAC,EAAAA,YAAY,CAACF,CAAC,CAACG,aAAF,CAAgBC,QAAhB,CAAyBC,UAAzB,CAAoCC,KAArC,CAAZ,CACGC,IADH,CACQ,UAAAC,IAAI,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAIA,IAAI,CAACG,GAAL,IAAY,GAAhB,EAAqB;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAE,MAAAA,cAAc,CAACC,UAAU,CAACL,IAAD,CAAX,CAAd;AACAM,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KALD,MAKO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,YAAY,CAAC;AACXC,QAAAA,OAAO,EAAEP,IAAI,CAACO;AADH,OAAD,CAAZ;AAGD;AACF,GAfH;AAgBH;;AAEM,SAASb,YAAT,CAAsBc,IAAtB,EAA2B;AAChC,SAAOnB,KAAK,4DAAqDmB,IAArD,kEAAL,CACJT,IADI,CACC,UAAAU,QAAQ;AAAA,WAAIA,QAAQ,CAACT,IAAT,EAAJ;AAAA,GADT,CAAP;AAED;;AAEM,SAASK,UAAT,CAAoBK,IAApB,EAA0B;AAC/B,MAAIC,OAAO,GAAG;AACdH,IAAAA,IAAI,EAAEE,IAAI,CAACE,IADG;AAEdC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEhB,MAAAA,KAAK,EAAEY,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBI;AAFzB,KADK,EAKL;AACED,MAAAA,IAAI,EAAE,iBADR;AAEEhB,MAAAA,KAAK,EAAEY,IAAI,CAACM,IAAL,CAAUC;AAFnB,KALK,EASL;AACEH,MAAAA,IAAI,EAAE,eADR;AAEEhB,MAAAA,KAAK,EAAEY,IAAI,CAACM,IAAL,CAAUE;AAFnB,KATK,EAaL;AACEJ,MAAAA,IAAI,EAAE,aADR;AAEEhB,MAAAA,KAAK,EAAEY,IAAI,CAACM,IAAL,CAAUG;AAFnB,KAbK,EAiBL;AACEL,MAAAA,IAAI,EAAE,iBADR;AAEEhB,MAAAA,KAAK,EAAEY,IAAI,CAACU,IAAL,CAAUC;AAFnB,KAjBK,EAqBL;AACEP,MAAAA,IAAI,EAAE,WADR;AAEEhB,MAAAA,KAAK,EAAEY,IAAI,CAACY,MAAL,CAAYC;AAFrB,KArBK;AAFO,GAAd;AA6BA,SAAOZ,OAAP;AACD;;AAEM,SAASP,cAAT,CAAwBO,OAAxB,EAAiC;AACtC,MAAIa,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,EAAkDC,SAA/D;AACE,MAAIC,QAAQ,GAAGC,UAAU,CAACC,OAAX,CAAmBN,MAAnB,CAAf;AACAC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,SAAzC,GAAqDC,QAAQ,CAACjB,OAAD,CAA7D;AACH;;AAEM,SAASL,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,MAAIwB,YAAY,GAAGN,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAgDC,SAAnE;AACE,MAAIC,QAAQ,GAAGC,UAAU,CAACC,OAAX,CAAmBC,YAAnB,CAAf;AACAN,EAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,GAAmDC,QAAQ,CAACrB,OAAD,CAA3D;AACH",
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1",
      "sourcesContent": [
        "const fetch = require('node-fetch');\r\n\r\nfunction onSubmit(e) {\r\n    e.preventDefault();\r\n    fetchWeather(e.currentTarget.elements.city_input.value)\r\n      .then(json => {\r\n        console.log(json);\r\n        if (json.cod == 200) {\r\n          console.log(\"god\");\r\n          displayWeather(getWeather(json));\r\n          displayError(null);\r\n          console.log(\"jhgfd\");\r\n        } else {\r\n          console.log(\"bad\");\r\n          displayWeather(null);\r\n          displayError({\r\n            message: json.message,\r\n          });\r\n        }\r\n      })\r\n}\r\n\r\nexport function fetchWeather(city){\r\n  return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=665c8e98e586f364800fd238b845d042&units=metric&lang=en`)\r\n    .then(response => response.json());\r\n}\r\n\r\nexport function getWeather(resp) {\r\n  let weather = {\r\n  city: resp.name,\r\n  param: [\r\n    {\r\n      type: 'Weather',\r\n      value: resp.weather[0].description\r\n    },\r\n    {\r\n      type: 'Temperature, °C',\r\n      value: resp.main.temp\r\n    },\r\n    {\r\n      type: 'Pressure, hPA',\r\n      value: resp.main.pressure,\r\n    },\r\n    {\r\n      type: 'Humidity, %',\r\n      value: resp.main.humidity\r\n    },\r\n    {\r\n      type: 'Wind speed, m/s',\r\n      value: resp.wind.speed\r\n    },\r\n    {\r\n      type: 'Clouds, %',\r\n      value: resp.clouds.all\r\n    },\r\n  ]\r\n  }\r\n  return weather;\r\n}\r\n\r\nexport function displayWeather(weather) {\r\n  var source = document.getElementById(\"weather-entry-template\").innerHTML;\r\n    let template = Handlebars.compile(source);\r\n    document.getElementById(\"weather-block\").innerHTML = template(weather);\r\n}\r\n\r\nexport function displayError(message) {\r\n  var error_source = document.getElementById(\"error-entry-template\").innerHTML;\r\n    let template = Handlebars.compile(error_source);\r\n    document.getElementById(\"error-block\").innerHTML = template(message);\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574161214476
  },
  "{\"sourceRoot\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\tests\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"filename\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\tests\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"plugins\":[],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\tests",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\Study\\Web\\sem2\\lab1",
      "filename": "D:\\Study\\Web\\sem2\\lab1\\tests\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Study\\Web\\sem2\\lab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Study\\Web\\sem2\\lab1\\tests\\test.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Study\\Web\\sem2\\lab1\\tests\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\tests",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "const {\n  assert\n} = require('chai');\n\nconst {\n  fetchWeather\n} = require('../script');\n\ndesсribe(\"fetch\", function () {\n  it(\"correct city\", function () {\n    const city = 'London';\n    fetchWeather(city).then(json => {\n      console.log(json.cod);\n      assert.equal(json.cod, 200);\n    });\n  });\n  it(\"incorrect city\", function () {\n    const city = 'Londo';\n    fetchWeather(city).then(json => {\n      console.log(json.cod);\n      assert.equal(json.cod, 200);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsImZldGNoV2VhdGhlciIsImRlc9GBcmliZSIsIml0IiwiY2l0eSIsInRoZW4iLCJqc29uIiwiY29uc29sZSIsImxvZyIsImNvZCIsImVxdWFsIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBYUMsT0FBTyxDQUFDLE1BQUQsQ0FBMUI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQW1CRCxPQUFPLENBQUMsV0FBRCxDQUFoQzs7QUFFQUUsUUFBUSxDQUFDLE9BQUQsRUFBVSxZQUFXO0FBQzNCQyxFQUFBQSxFQUFFLENBQUMsY0FBRCxFQUFpQixZQUFXO0FBQzVCLFVBQU1DLElBQUksR0FBRyxRQUFiO0FBQ0FILElBQUFBLFlBQVksQ0FBQ0csSUFBRCxDQUFaLENBQW1CQyxJQUFuQixDQUF3QkMsSUFBSSxJQUFJO0FBQzlCQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBSSxDQUFDRyxHQUFqQjtBQUNBVixNQUFBQSxNQUFNLENBQUNXLEtBQVAsQ0FBYUosSUFBSSxDQUFDRyxHQUFsQixFQUF1QixHQUF2QjtBQUNELEtBSEQ7QUFJRCxHQU5DLENBQUY7QUFPQU4sRUFBQUEsRUFBRSxDQUFDLGdCQUFELEVBQW1CLFlBQVc7QUFDOUIsVUFBTUMsSUFBSSxHQUFHLE9BQWI7QUFDQUgsSUFBQUEsWUFBWSxDQUFDRyxJQUFELENBQVosQ0FBbUJDLElBQW5CLENBQXdCQyxJQUFJLElBQUk7QUFDOUJDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFJLENBQUNHLEdBQWpCO0FBQ0FWLE1BQUFBLE1BQU0sQ0FBQ1csS0FBUCxDQUFhSixJQUFJLENBQUNHLEdBQWxCLEVBQXVCLEdBQXZCO0FBQ0QsS0FIRDtBQUlELEdBTkMsQ0FBRjtBQU9ELENBZk8sQ0FBUiIsInNvdXJjZVJvb3QiOiJEOlxcU3R1ZHlcXFdlYlxcc2VtMlxcbGFiMVxcdGVzdHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGFzc2VydCB9ID0gcmVxdWlyZSgnY2hhaScpO1xyXG5jb25zdCB7IGZldGNoV2VhdGhlciB9ID0gcmVxdWlyZSgnLi4vc2NyaXB0Jyk7XHJcblxyXG5kZXPRgXJpYmUoXCJmZXRjaFwiLCBmdW5jdGlvbigpIHtcclxuICBpdChcImNvcnJlY3QgY2l0eVwiLCBmdW5jdGlvbigpIHtcclxuICAgIGNvbnN0IGNpdHkgPSAnTG9uZG9uJztcclxuICAgIGZldGNoV2VhdGhlcihjaXR5KS50aGVuKGpzb24gPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhqc29uLmNvZCk7XHJcbiAgICAgIGFzc2VydC5lcXVhbChqc29uLmNvZCwgMjAwKVxyXG4gICAgfSk7XHJcbiAgfSk7XHJcbiAgaXQoXCJpbmNvcnJlY3QgY2l0eVwiLCBmdW5jdGlvbigpIHtcclxuICAgIGNvbnN0IGNpdHkgPSAnTG9uZG8nO1xyXG4gICAgZmV0Y2hXZWF0aGVyKGNpdHkpLnRoZW4oanNvbiA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGpzb24uY29kKTtcclxuICAgICAgYXNzZXJ0LmVxdWFsKGpzb24uY29kLCAyMDApXHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "assert",
        "require",
        "fetchWeather",
        "desсribe",
        "it",
        "city",
        "then",
        "json",
        "console",
        "log",
        "cod",
        "equal"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,MAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAmBD,OAAO,CAAC,WAAD,CAAhC;;AAEAE,QAAQ,CAAC,OAAD,EAAU,YAAW;AAC3BC,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC5B,UAAMC,IAAI,GAAG,QAAb;AACAH,IAAAA,YAAY,CAACG,IAAD,CAAZ,CAAmBC,IAAnB,CAAwBC,IAAI,IAAI;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAV,MAAAA,MAAM,CAACW,KAAP,CAAaJ,IAAI,CAACG,GAAlB,EAAuB,GAAvB;AACD,KAHD;AAID,GANC,CAAF;AAOAN,EAAAA,EAAE,CAAC,gBAAD,EAAmB,YAAW;AAC9B,UAAMC,IAAI,GAAG,OAAb;AACAH,IAAAA,YAAY,CAACG,IAAD,CAAZ,CAAmBC,IAAnB,CAAwBC,IAAI,IAAI;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAV,MAAAA,MAAM,CAACW,KAAP,CAAaJ,IAAI,CAACG,GAAlB,EAAuB,GAAvB;AACD,KAHD;AAID,GANC,CAAF;AAOD,CAfO,CAAR",
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\tests",
      "sourcesContent": [
        "const { assert } = require('chai');\r\nconst { fetchWeather } = require('../script');\r\n\r\ndesсribe(\"fetch\", function() {\r\n  it(\"correct city\", function() {\r\n    const city = 'London';\r\n    fetchWeather(city).then(json => {\r\n      console.log(json.cod);\r\n      assert.equal(json.cod, 200)\r\n    });\r\n  });\r\n  it(\"incorrect city\", function() {\r\n    const city = 'Londo';\r\n    fetchWeather(city).then(json => {\r\n      console.log(json.cod);\r\n      assert.equal(json.cod, 200)\r\n    });\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574112563266
  },
  "{\"sourceRoot\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\tests\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"filename\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\\\\tests\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Study\\\\Web\\\\sem2\\\\lab1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\tests",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\Study\\Web\\sem2\\lab1",
      "filename": "D:\\Study\\Web\\sem2\\lab1\\tests\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Study\\Web\\sem2\\lab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Study\\Web\\sem2\\lab1\\tests\\test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Study\\Web\\sem2\\lab1\\tests\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\tests",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('chai'),\n    assert = _require.assert;\n\nvar _require2 = require('../script'),\n    fetchWeather = _require2.fetchWeather;\n\ndescribe('response code when doing fetch', function () {\n  it(\"correct city\", function (done) {\n    var city = 'London';\n    assert.doesNotThrow(function () {\n      fetchWeather(city).then(function (json) {\n        console.log(json.cod);\n        assert.equal(json.cod, 200);\n        done();\n      }, done);\n    });\n  });\n  it(\"correct city\", function (done) {\n    var city = 'gfmvro';\n    assert.doesNotThrow(function () {\n      fetchWeather(city).then(function (json) {\n        console.log(json.cod);\n        assert.equal(json.cod, 404);\n        done();\n      }, done);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImFzc2VydCIsImZldGNoV2VhdGhlciIsImRlc2NyaWJlIiwiaXQiLCJkb25lIiwiY2l0eSIsImRvZXNOb3RUaHJvdyIsInRoZW4iLCJqc29uIiwiY29uc29sZSIsImxvZyIsImNvZCIsImVxdWFsIl0sIm1hcHBpbmdzIjoiOztlQUFtQkEsT0FBTyxDQUFDLE1BQUQsQztJQUFsQkMsTSxZQUFBQSxNOztnQkFDaUJELE9BQU8sQ0FBQyxXQUFELEM7SUFBeEJFLFksYUFBQUEsWTs7QUFFUkMsUUFBUSxDQUFFLGdDQUFGLEVBQW9DLFlBQVc7QUFDckRDLEVBQUFBLEVBQUUsQ0FBQyxjQUFELEVBQWlCLFVBQVNDLElBQVQsRUFBZTtBQUNoQyxRQUFNQyxJQUFJLEdBQUcsUUFBYjtBQUNBTCxJQUFBQSxNQUFNLENBQUNNLFlBQVAsQ0FBb0IsWUFBWTtBQUM5QkwsTUFBQUEsWUFBWSxDQUFDSSxJQUFELENBQVosQ0FBbUJFLElBQW5CLENBQXdCLFVBQUFDLElBQUksRUFBSTtBQUM1QkMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQUksQ0FBQ0csR0FBakI7QUFDQVgsUUFBQUEsTUFBTSxDQUFDWSxLQUFQLENBQWFKLElBQUksQ0FBQ0csR0FBbEIsRUFBdUIsR0FBdkI7QUFDQVAsUUFBQUEsSUFBSTtBQUNQLE9BSkQsRUFJR0EsSUFKSDtBQUtELEtBTkQ7QUFPRCxHQVRDLENBQUY7QUFXQUQsRUFBQUEsRUFBRSxDQUFDLGNBQUQsRUFBaUIsVUFBU0MsSUFBVCxFQUFlO0FBQ2hDLFFBQU1DLElBQUksR0FBRyxRQUFiO0FBQ0FMLElBQUFBLE1BQU0sQ0FBQ00sWUFBUCxDQUFvQixZQUFZO0FBQzlCTCxNQUFBQSxZQUFZLENBQUNJLElBQUQsQ0FBWixDQUFtQkUsSUFBbkIsQ0FBd0IsVUFBQUMsSUFBSSxFQUFJO0FBQzVCQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBSSxDQUFDRyxHQUFqQjtBQUNBWCxRQUFBQSxNQUFNLENBQUNZLEtBQVAsQ0FBYUosSUFBSSxDQUFDRyxHQUFsQixFQUF1QixHQUF2QjtBQUNBUCxRQUFBQSxJQUFJO0FBQ1AsT0FKRCxFQUlHQSxJQUpIO0FBS0QsS0FORDtBQU9ELEdBVEMsQ0FBRjtBQVVELENBdEJPLENBQVIiLCJzb3VyY2VSb290IjoiRDpcXFN0dWR5XFxXZWJcXHNlbTJcXGxhYjFcXHRlc3RzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBhc3NlcnQgfSA9IHJlcXVpcmUoJ2NoYWknKTtcclxuY29uc3QgeyBmZXRjaFdlYXRoZXIgfSA9IHJlcXVpcmUoJy4uL3NjcmlwdCcpO1xyXG5cclxuZGVzY3JpYmUgKCdyZXNwb25zZSBjb2RlIHdoZW4gZG9pbmcgZmV0Y2gnLCBmdW5jdGlvbigpIHtcclxuICBpdChcImNvcnJlY3QgY2l0eVwiLCBmdW5jdGlvbihkb25lKSB7XHJcbiAgICBjb25zdCBjaXR5ID0gJ0xvbmRvbic7XHJcbiAgICBhc3NlcnQuZG9lc05vdFRocm93KGZ1bmN0aW9uICgpIHtcclxuICAgICAgZmV0Y2hXZWF0aGVyKGNpdHkpLnRoZW4oanNvbiA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhqc29uLmNvZCk7XHJcbiAgICAgICAgICBhc3NlcnQuZXF1YWwoanNvbi5jb2QsIDIwMCk7XHJcbiAgICAgICAgICBkb25lKCk7XHJcbiAgICAgIH0sIGRvbmUpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KFwiY29ycmVjdCBjaXR5XCIsIGZ1bmN0aW9uKGRvbmUpIHtcclxuICAgIGNvbnN0IGNpdHkgPSAnZ2ZtdnJvJztcclxuICAgIGFzc2VydC5kb2VzTm90VGhyb3coZnVuY3Rpb24gKCkge1xyXG4gICAgICBmZXRjaFdlYXRoZXIoY2l0eSkudGhlbihqc29uID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGpzb24uY29kKTtcclxuICAgICAgICAgIGFzc2VydC5lcXVhbChqc29uLmNvZCwgNDA0KTtcclxuICAgICAgICAgIGRvbmUoKTtcclxuICAgICAgfSwgZG9uZSk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "require",
        "assert",
        "fetchWeather",
        "describe",
        "it",
        "done",
        "city",
        "doesNotThrow",
        "then",
        "json",
        "console",
        "log",
        "cod",
        "equal"
      ],
      "mappings": ";;eAAmBA,OAAO,CAAC,MAAD,C;IAAlBC,M,YAAAA,M;;gBACiBD,OAAO,CAAC,WAAD,C;IAAxBE,Y,aAAAA,Y;;AAERC,QAAQ,CAAE,gCAAF,EAAoC,YAAW;AACrDC,EAAAA,EAAE,CAAC,cAAD,EAAiB,UAASC,IAAT,EAAe;AAChC,QAAMC,IAAI,GAAG,QAAb;AACAL,IAAAA,MAAM,CAACM,YAAP,CAAoB,YAAY;AAC9BL,MAAAA,YAAY,CAACI,IAAD,CAAZ,CAAmBE,IAAnB,CAAwB,UAAAC,IAAI,EAAI;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAX,QAAAA,MAAM,CAACY,KAAP,CAAaJ,IAAI,CAACG,GAAlB,EAAuB,GAAvB;AACAP,QAAAA,IAAI;AACP,OAJD,EAIGA,IAJH;AAKD,KAND;AAOD,GATC,CAAF;AAWAD,EAAAA,EAAE,CAAC,cAAD,EAAiB,UAASC,IAAT,EAAe;AAChC,QAAMC,IAAI,GAAG,QAAb;AACAL,IAAAA,MAAM,CAACM,YAAP,CAAoB,YAAY;AAC9BL,MAAAA,YAAY,CAACI,IAAD,CAAZ,CAAmBE,IAAnB,CAAwB,UAAAC,IAAI,EAAI;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAX,QAAAA,MAAM,CAACY,KAAP,CAAaJ,IAAI,CAACG,GAAlB,EAAuB,GAAvB;AACAP,QAAAA,IAAI;AACP,OAJD,EAIGA,IAJH;AAKD,KAND;AAOD,GATC,CAAF;AAUD,CAtBO,CAAR",
      "sourceRoot": "D:\\Study\\Web\\sem2\\lab1\\tests",
      "sourcesContent": [
        "const { assert } = require('chai');\r\nconst { fetchWeather } = require('../script');\r\n\r\ndescribe ('response code when doing fetch', function() {\r\n  it(\"correct city\", function(done) {\r\n    const city = 'London';\r\n    assert.doesNotThrow(function () {\r\n      fetchWeather(city).then(json => {\r\n          console.log(json.cod);\r\n          assert.equal(json.cod, 200);\r\n          done();\r\n      }, done);\r\n    });\r\n  });\r\n\r\n  it(\"correct city\", function(done) {\r\n    const city = 'gfmvro';\r\n    assert.doesNotThrow(function () {\r\n      fetchWeather(city).then(json => {\r\n          console.log(json.cod);\r\n          assert.equal(json.cod, 404);\r\n          done();\r\n      }, done);\r\n    });\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574162684296
  }
}